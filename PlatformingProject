import greenfoot.*;  // (World, Actor, GreenfootImage, Greenfoot and MouseInfo)

/**
 * Controls movement and damage of the player-controlled character
 * 
 * @Sean Shimohara
 * @5/19
 */
public class Character extends Actor
{
    //The base fall speed of the character
    private final int GRAVITY= 1;
    
    //The base movement speed of the character
    private final int BASESPEED = 3;
    
    //Tracks how much faster the character will fall w/ relation to time
    private int gravityAcceleration = 0;
    
    //Tracks how much faster character will move w/ relation to time
    private double movementAcceleration = 0.01;
    
    //Puts a cap on how high the character will jump (resets on landing)
    private int jumpCounter = 2;
    
    //Keeps track of character's lives
    private int lives = 3;
    
    public void act() {
        if(!isTouching(null)) {
            fall();
        }
        else {
            gravityAcceleration = 0;
            jumpCounter = 2;
        }
        movement();
        jump();
        if(!Greenfoot.isKeyDown("left") && !Greenfoot.isKeyDown("right")) {
            movementAcceleration = 0;
        }
    }
    public void fall() {
        setLocation(getX(), getY() + GRAVITY + gravityAcceleration);
        gravityAcceleration += 1;
    }
    
    //Controls left and right movement of character, as well as sprinting
    public void movement() {
        if(!isTouching(KillBox.class)) {
            if(Greenfoot.isKeyDown("left") || Greenfoot.isKeyDown("a")) {
                setLocation(getX() - BASESPEED - (int)(movementAcceleration), getY());
                movementAcceleration += .01;
            }
            if(Greenfoot.isKeyDown("right") || Greenfoot.isKeyDown("d")) {
                setLocation(getX() + BASESPEED + (int)(movementAcceleration), getY());
                movementAcceleration += .01;
            }
            if(Greenfoot.isKeyDown("shift")) {
                movementAcceleration += .1;
            }
        }
    }
    
    //Controls upward vertical movement of character
    public void jump() {
        if(!isTouching(KillBox.class)) {
            if(jumpCounter > 0 && (Greenfoot.isKeyDown("up") || Greenfoot.isKeyDown("space") || Greenfoot.isKeyDown("w"))) {
                setLocation(getX(), getY() - 20);
                gravityAcceleration -= 10;
                jumpCounter--;
            }
        }
    }
    
    //Decreases lives and resets character spawn location when touching a KillBox
    public void death() {
        if(isTouching(KillBox.class)) {
            if(lives > 0) {
               lives--;
               setLocation(55, 505);
            }
        }
    }
    
    //Returns the remaining number of lives
    public int getLives() {
        return lives;
    }
} 

//Main World
import greenfoot.*;  // (World, Actor, GreenfootImage, Greenfoot and MouseInfo)

/**
 * Write a description of class MyWorld here.
 * 
 * @author (your name) 
 * @version (a version number or a date)
 */
public class LevelOne extends World
{

    /**
     * Constructor for objects of class MyWorld.
     * 
     */
    public LevelOne()
    {    
        super(1350, 700, 1); 
        Character character = new Character();
        addObject(character,55,505);
        prepare();
    }

    /**
     * Prepare the world for the start of the program.
     * That is: create the initial objects and add them to the world.
     */
    private void prepare()
    {
        Obstacle obstacle = new Obstacle();
        addObject(obstacle,53,653);
        Obstacle obstacle2 = new Obstacle();
        addObject(obstacle2,157,654);
        Obstacle obstacle4 = new Obstacle();
        addObject(obstacle4,548,654);
        Obstacle obstacle6 = new Obstacle();
        addObject(obstacle6,1049,653);
        Obstacle obstacle7 = new Obstacle();
        addObject(obstacle7,1154,652);
        Obstacle obstacle8 = new Obstacle();
        addObject(obstacle8,1299,653);
        Obstacle obstacle9 = new Obstacle();
        addObject(obstacle9,1241,652);
        Obstacle obstacle10 = new Obstacle();
        addObject(obstacle10,841,652);
        KillBox killBox = new KillBox();
        addObject(killBox,458,680);
        KillBox killBox2 = new KillBox();
        addObject(killBox2,662,680);
        obstacle10.setLocation(789,680);
        KillBox killBox3 = new KillBox();
        addObject(killBox3,789,680);
        KillBox killBox4 = new KillBox();
        addObject(killBox4,273,680);
        Obstacle obstacle12 = new Obstacle();
        addObject(obstacle12,946,654);
        obstacle9.setLocation(905,653);
        Obstacle obstacle13 = new Obstacle();
        addObject(obstacle13,905,653);
        Obstacle obstacle14 = new Obstacle();
        addObject(obstacle14,367,655);
        Obstacle obstacle15 = new Obstacle();
        addObject(obstacle15, 1200, 653);
    }
}
